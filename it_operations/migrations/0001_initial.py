# Generated by Django 5.2.5 on 2025-10-29 10:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0011_customuser_is_it_manager_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(help_text='System/Software name being backed up', max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('centre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backup_registries', to='devices.centre')),
                ('done_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backups_performed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backup Registry',
                'verbose_name_plural': 'Backup Registries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MissionCriticalAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name/Description of the asset', max_length=255)),
                ('category', models.CharField(choices=[('Infrastructure', 'Infrastructure'), ('Network', 'Network'), ('Security', 'Security'), ('Storage', 'Storage'), ('Backup', 'Backup'), ('Power', 'Power'), ('Cooling', 'Cooling'), ('Other', 'Other')], max_length=50)),
                ('location_scope', models.CharField(help_text='Location/Scope (e.g., HQ & Data Centers)', max_length=255)),
                ('purpose_function', models.TextField(help_text='Purpose/Function of the asset')),
                ('dependency_linked_system', models.TextField(blank=True, help_text='Dependency/Linked System', null=True)),
                ('backup_recovery_method', models.TextField(help_text='Backup/Recovery Method')),
                ('criticality_level', models.CharField(choices=[('Critical', 'Critical'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mission_critical_assets_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mission_critical_assets', to='devices.department')),
            ],
            options={
                'verbose_name': 'Mission Critical Asset',
                'verbose_name_plural': 'Mission Critical Assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField(help_text='Monday of the week')),
                ('week_end_date', models.DateField(help_text='Sunday of the week')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Work Plan',
                'verbose_name_plural': 'Work Plans',
                'ordering': ['-week_start_date'],
                'unique_together': {('user', 'week_start_date')},
            },
        ),
        migrations.CreateModel(
            name='WorkPlanActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday')], max_length=10)),
                ('activity', models.TextField(help_text='Description of the activity/task')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('work_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='it_operations.workplan')),
            ],
            options={
                'ordering': ['day'],
            },
        ),
        migrations.CreateModel(
            name='WorkPlanComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('work_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='it_operations.workplan')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
